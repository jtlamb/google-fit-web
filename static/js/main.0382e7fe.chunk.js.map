{"version":3,"sources":["components/LandingPage.jsx","util/HomeGraphs.jsx","util/Conversions.jsx","components/Home.jsx","components/Profile.jsx","components/Journal.jsx","components/About.jsx","util/UserProfile.jsx","components/SignInOut.jsx","imgs/GoogleFit_Logo_Vertical.png","components/SideNav.jsx","components/App.jsx","reportWebVitals.js","index.tsx"],"names":["LandingPage","renderBarGraph","props","width","height","chartType","loader","data","label","date","options","chart","title","subtitle","renderPieChart","actual","goal","color","className","Math","max","pieHole","legend","pieSliceText","slices","mToMi","m","getMonth","Home","useState","selected","setSelected","key","setKey","loaded","setLoaded","handleClick","i","requestURL","d","Date","e","msSinceMidnight","setHours","week","day","heartPoints","setHeartPoints","hpBody","getTime","hpTodayBody","useEffect","fetch","method","headers","user","accessToken","body","JSON","stringify","then","res","json","response","temp1","parseInt","bucket","startTimeMillis","dataset","point","length","obj","value","fpVal","toDateString","push","temp2","endTimeMillis","concat","catch","error","console","log","steps","setSteps","stepsBody","stepsTodayBody","intVal","dist","setDist","distBody","distTodayBody","moveMins","setMoveMins","mmBody","mmTodayBody","cals","setCals","calsBody","calsTodayBody","handlePagination","fname","class","role","onClick","map","x","stepsData","distData","mmData","calsData","dates","tempDate","getDate","renderStepsGraph","renderDistanceGraph","renderMoveMinsGraph","renderCaloriesGraph","bottomGraphs","Profile","bDate","setBDate","gender","setGender","peopleRequestUrl","URL","protocol","hostname","pathname","searchParams","append","birthdays","month","year","genders","formattedValue","src","pfPic","alt","lname","scope","Journal","navDate","getFullYear","renderDays","About","blankUser","authenticated","name","email","CLIENT_ID","keys","web","client_id","SignInOut","isLoggedIn","setIsLoggedIn","setUser","useContext","userContext","clientId","buttonText","onLogoutSuccess","onFailure","alert","onSuccess","getBasicProfile","getName","getGivenName","getFamilyName","getImageUrl","slice","lastIndexOf","getEmail","getGrantedScopes","cookiePolicy","responseType","SideNav","to","FitLogo","aria-hidden","createContext","App","basename","Provider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0382e7fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function LandingPage() {\r\n\r\n    return (\r\n        <>\r\n            <h2>Landing Page</h2>\r\n            <p>Sign in to view your Google Fit data.</p>\r\n        </>\r\n    )\r\n}","/* Packages */\nimport React from 'react';\nimport { Chart } from \"react-google-charts\";\n\nconst graphWidth = '40em';\nconst graphHeight = '25em';\n\nexport const renderBarGraph = (props) => {\n\n    return (\n        <Chart\n            width={graphWidth}\n            height={graphHeight}\n            chartType=\"Bar\"\n            loader={<div>Loading Chart</div>}\n            data={[\n                ['Date', props.label],\n                [props.date[0], props.data[0]],\n                [props.date[1], props.data[1]],\n                [props.date[2], props.data[2]],\n                [props.date[3], props.data[3]],\n                [props.date[4], props.data[4]],\n                [props.date[5], props.data[5]],\n                [props.date[6], props.data[6]],\n            ]}\n            options={{\n                // Material design options\n                chart: {\n                title: props.title,\n                subtitle: props.subtitle,\n                },\n            }}\n        />\n    )\n}\n\n\nconst pieWidth = '13em';\nconst pieHeight = '13em';\n\nexport const renderPieChart = (actual, goal, color, title) => {\n    return (\n        <div className=\"pie\">\n            <Chart\n                width={pieWidth}\n                height={pieHeight}\n                chartType=\"PieChart\"\n                loader={<span className=\"material-icons loading-icon\">loop</span>}\n                data={[\n                    ['Move Minutes', 'Amount'],\n                    ['Actual', actual],\n                    ['Away from Goal', Math.max(0, goal - actual)],\n                ]}\n                options={{\n                    pieHole: 0.75,\n                    legend: 'none',\n                    pieSliceText: 'none',\n                    slices: [\n                        {\n                        color: color\n                        },\n                        {\n                        color: \"#d3d3d3\"\n                        }\n                    ],\n                }}\n            />\n            {title}   \n        </div>\n    )\n}","/**\n * @param kg kilograms\n * @returns conversion from kg to lbs\n */\nexport function kToLbs(kg) {\n    return kg * 2.20462;\n}\n\n/**\n * @param m meters\n * @returns conversion from meters to feet\n */\nexport function mToFt(m) {\n    let ft = m * 3.28084;\n    let inches = (ft % ft.toFixed(0)) * 12;\n    ft = ft.toFixed(0);\n    inches = Math.round(inches).toFixed(0)\n    return {\n        ft,\n        inches\n    }\n}\n/**\n * @param m meters \n * @returns conversion from meters to miles\n */\nexport function mToMi(m) {\n    return m*0.000621371192;\n}\n\n/**\n * @param m number of month \n * @returns string representation of the month\n */\nexport function getMonth(m) {\n    switch(m) {\n        case 1: return \"January\";\n        case 2: return \"February\";\n        case 3: return \"March\";\n        case 4: return \"April\";\n        case 5: return \"May\";\n        case 6: return \"June\";\n        case 7: return \"July\";\n        case 8: return \"August\";\n        case 9: return \"September\";\n        case 10: return \"October\";\n        case 11: return \"November\";\n        case 12: return \"December\";\n        default: return \"Invalid Month\"\n    }\n}\n","/* Packages */\r\nimport React, { useState, useEffect } from 'react';\r\n/* Util */\r\nimport {renderPieChart, renderBarGraph } from '../util/HomeGraphs';\r\nimport { mToMi } from '../util/Conversions';\r\n/* Styles */\r\nimport '../styles/Home.scss'\r\n\r\nexport default function Home(props) {\r\n    // selected will track the current index of the selected item\r\n    const [ selected, setSelected ] = useState(0);\r\n    const [ key, setKey ] = useState(0);\r\n    const [ loaded, setLoaded ] = useState(false)\r\n\r\n    const handleClick = (i) => {\r\n        setSelected(i);\r\n    }\r\n\r\n    const requestURL = `https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate`;\r\n    let d = new Date(), e = new Date(d);\r\n    const msSinceMidnight = e - d.setHours(0,0,0,0);\r\n    const week = 6.048e+8;\r\n    const day = 86400000;\r\n    \r\n\r\n    // ------------HEART POINTS API CALL------------\r\n    const [ heartPoints, setHeartPoints ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const hpBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.heart_minutes\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n    const hpTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.heart_minutes\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(hpBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[i].dataset[0].point[0].value[0].fpVal, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(hpTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[0].dataset[0].point[0].value[0].fpVal, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setHeartPoints(temp1.concat(temp2));\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n\r\n        \r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // ------------STEPS API CALL------------\r\n    const [ steps, setSteps ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const stepsBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.step_count.delta\",\r\n            \"dataSourceId\": \"derived:com.google.step_count.delta:com.google.android.gms:estimated_steps\"\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const stepsTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.step_count.delta\",\r\n            \"dataSourceId\": \"derived:com.google.step_count.delta:com.google.android.gms:estimated_steps\"\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(stepsBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[i].dataset[0].point[0].value[0].intVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(stepsTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[0].dataset[0].point[0].value[0].intVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setSteps(temp1.concat(temp2));\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // ------------DIST API CALL------------\r\n    const [ dist, setDist ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const distBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.distance.delta\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const distTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.distance.delta\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(distBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: mToMi(response.bucket[i].dataset[0].point[0].value[0].fpVal), \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(distTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: mToMi(response.bucket[0].dataset[0].point[0].value[0].fpVal), \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setDist(temp1.concat(temp2));\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // ------------MOVE MINS API CALL------------\r\n    const [ moveMins, setMoveMins ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const mmBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.active_minutes\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const mmTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.active_minutes\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(mmBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[i].dataset[0].point[0].value[0].intVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(mmTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[0].dataset[0].point[0].value[0].intVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setMoveMins(temp1.concat(temp2));\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // ------------CALS API CALL------------\r\n    const [ cals, setCals ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const calsBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.calories.expended\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const calsTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.calories.expended\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(calsBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[i].dataset[0].point[0].value[0].fpVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(calsTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length !== 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[0].dataset[0].point[0].value[0].fpVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setCals(temp1.concat(temp2));\r\n                setLoaded(true);\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    // ------------BOTTOM GRAPHS------------\r\n    const handlePagination = (i) => {\r\n        if (i === 0) {\r\n            // going left\r\n            (key - 1 === -1) ? setKey(3) : setKey(key - 1);\r\n        } else {\r\n            // going right\r\n            (key + 1 === 4) ? setKey(0) : setKey(key + 1);\r\n        }\r\n    }\r\n\r\n    const bottomGraphs = (key) => {\r\n        let stepsData = [];\r\n        steps.map(x => stepsData.push(x.actual));\r\n        let distData = [];\r\n        dist.map(x => distData.push(x.actual));\r\n        let mmData = []\r\n        moveMins.map(x => mmData.push(x.actual));\r\n        let calsData = [];\r\n        cals.map(x => calsData.push(x.actual));\r\n        let dates = [];\r\n        for (let i = 1; i < 8; i++) {\r\n            let tempDate = new Date(d.getTime()-week+i*day);\r\n            dates.push(tempDate.getMonth()+1 + \"/\" + tempDate.getDate());\r\n        }\r\n        switch (key) {\r\n            case 0:\r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderStepsGraph(dates, stepsData)}</span>\r\n                    <span className='bottomGraph'>{renderDistanceGraph(dates, distData)}</span>\r\n                    </>\r\n                )\r\n            case 1:\r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderDistanceGraph(dates, distData)}</span>\r\n                    <span className='bottomGraph'>{renderMoveMinsGraph(dates, mmData)}</span>\r\n                    </>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderMoveMinsGraph(dates, mmData)}</span>\r\n                    <span className='bottomGraph'>{renderCaloriesGraph(dates, calsData)}</span>\r\n                    </>\r\n                )\r\n            case 3: \r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderCaloriesGraph(dates, calsData)}</span>\r\n                    <span className='bottomGraph'>{renderStepsGraph(dates, stepsData)}</span>\r\n                    </>\r\n                )\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"name\">\r\n                Welcome to Google Fit Web, {props.user.fname}!\r\n            </div>\r\n            <div >\r\n                {loaded ? \r\n                <>\r\n                    <div class=\"middleGraphs\">\r\n                    <div class=\"mdc-chip-set mdc-chip-set--choice\" role=\"grid\">\r\n                            <div class={selected === 0 ? \"mdc-chip chip-selected\" : \"mdc-chip\"} role=\"row\" onClick={() => handleClick(0)}>\r\n                                <span role=\"gridcell\">\r\n                                    <span role=\"button\" class=\"mdc-chip__primary-action\">\r\n                                        <span class=\"mdc-chip__text\">Heart Points</span>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div class={selected === 1 ? \"mdc-chip chip-selected\" : \"mdc-chip\"} role=\"row\" onClick={() => handleClick(1)}>\r\n                                <span role=\"gridcell\">\r\n                                    <span role=\"button\" class=\"mdc-chip__primary-action\">\r\n                                        <span class=\"mdc-chip__text\">Steps</span>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"dailyGoalsText\">Your Daily {selected === 0 ? \"Heart Points\" : \"Steps\"} Goals</span>\r\n                        <div className=\"weeklyGoalGraphs\">\r\n                            {selected === 0 ? heartPoints.map(x => renderPieChart(x.actual, x.goal, x.color, x.date)) : steps.map(x => renderPieChart(x.actual, x.goal, x.color, x.date))}\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className='bottomGraphs'>\r\n                        <button class=\"mdc-icon-button material-icons\" onClick={() => handlePagination(0)}>keyboard_arrow_left</button>\r\n                        {bottomGraphs(key)}\r\n                        <button class=\"mdc-icon-button material-icons\" onClick={() => handlePagination(1)}>keyboard_arrow_right</button>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div>\r\n                    <span className=\"loading\">Loading Fitness Data ...</span> \r\n                    <br/>\r\n                    <span class=\"material-icons md-spec\">cached</span>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst renderStepsGraph = (dates, data) => {\r\n    // get step info from API\r\n    const props = {\r\n        label: 'Steps',\r\n        title: 'Steps',\r\n        subtitle: 'Step data for the past week',\r\n        date: dates,\r\n        data: data\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n\r\nconst renderDistanceGraph = (dates, data) => {\r\n    // get distance info from API\r\n    const props = {\r\n        label: 'Distance (miles)',\r\n        title: 'Distance',\r\n        subtitle: 'Distance travelled over the past week',\r\n        date: dates,\r\n        data: data\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n\r\nconst renderMoveMinsGraph = (dates, data) => {\r\n    // get move mins info from API\r\n    const props = {\r\n        label: 'Move Mins',\r\n        title: 'Move Minutes',\r\n        subtitle: 'Move Minutes for the past week',\r\n        date: dates,\r\n        data: data\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n\r\nconst renderCaloriesGraph = (dates, data) => {\r\n    // get calories info from API\r\n    const props = {\r\n        label: 'Calories (kCal)',\r\n        title: 'Calories',\r\n        subtitle: 'Calories expended over the past week',\r\n        date: dates,\r\n        data: data\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n","/* Packages */\r\nimport React, { useEffect, useState } from 'react';\r\n/* Util */\r\nimport { getMonth } from '../util/Conversions';\r\n/* Styles */\r\nimport '../styles/Profile.scss'\r\n\r\nexport default function Profile(props) {\r\n\r\n    const [ loaded, setLoaded ] = useState(false);\r\n    const [ bDate, setBDate ] = useState('');\r\n    const [ gender, setGender ] = useState('');\r\n\r\n    /* Name, Birthday, Gender */\r\n    const peopleRequestUrl = new URL('https://people.googleapis.com');\r\n    peopleRequestUrl.protocol = 'https';\r\n    peopleRequestUrl.hostname = 'people.googleapis.com';\r\n    peopleRequestUrl.pathname = '/v1/people/me';\r\n    peopleRequestUrl.searchParams.append('personFields', 'birthdays,genders,names');\r\n    peopleRequestUrl.searchParams.append('sources', 'READ_SOURCE_TYPE_PROFILE');\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            peopleRequestUrl,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            setBDate(`${getMonth(response.birthdays[0].date.month)} ${response.birthdays[0].date.day}, ${response.birthdays[0].date.year}`);\r\n            setGender(`${response.genders[0].formattedValue}`);\r\n            setLoaded(true);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    /* Height, Weight  TODO :: ????? can only get aggregate data from user manually entered values, find a way to get latest value */\r\n    // const [ height, setHeight ] = useState(0);\r\n    // const [ weight, setWeight ] = useState(0);\r\n\r\n    // const d = new Date();\r\n    // const presentationOfGoogleFit = 86400000 * 16246;\r\n    // const end = d.getTime();\r\n    // console.log(end);\r\n\r\n    // const requestURL = `https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate`;\r\n    // const weightBody = {\r\n    //     \"aggregateBy\": [{\r\n    //         \"dataTypeName\": \"com.google.weight\",\r\n    //         \"dataSourceId\": \"derived:com.google.weight:com.google.android.gms:merge_weight\"\r\n    //     }],\r\n    //     \"startTimeMillis\": end - 86400000,\r\n    //     \"endTimeMillis\": end,\r\n    //     \"bucketByTime\": {\r\n    //         \"durationMillis\": 86400000,\r\n    //         \"period\": {\r\n    //             \"type\": \"day\",\r\n    //             \"value\": 1,\r\n    //             \"timeZoneId\": \"America/New_York\"\r\n    //         }\r\n    //     }\r\n    // };\r\n    // const heightBody = {\r\n    //     \"aggregateBy\": [{\r\n    //         \"dataTypeName\": \"com.google.height\",\r\n    //         \"dataSourceId\": \"derived:com.google.height:com.google.android.gms:merge_height\"\r\n    //     }],\r\n    //     \"startTimeMillis\": end - 86400000,\r\n    //     \"endTimeMillis\": end,\r\n    //     \"bucketByTime\": {\r\n    //         \"durationMillis\": 86400000,\r\n    //         \"period\": {\r\n    //             \"type\": \"day\",\r\n    //             \"value\": 1,\r\n    //             \"timeZoneId\": \"America/New_York\"\r\n    //         }\r\n    //     }\r\n    // };\r\n    // // get weight\r\n    // useEffect(() => {\r\n    //     fetch(\r\n    //         requestURL,\r\n    //         {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json;encoding=utf-8',\r\n    //                 'Authorization': `Bearer ${props.user.accessToken}`,\r\n    //             },\r\n    //             body: JSON.stringify(weightBody)\r\n    //         }\r\n    //     )\r\n    //     .then(res => res.json())\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         setWeight(response.bucket[0].dataset[0].point[0].value[0].fpVal);\r\n    //     })\r\n    //     .catch(error => console.log(error));\r\n    // }, [props.user.authenticated])  \r\n    // // get height\r\n    // useEffect(() => {\r\n    //     fetch(\r\n    //         requestURL,\r\n    //         {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json;encoding=utf-8',\r\n    //                 'Authorization': `Bearer ${props.user.accessToken}`,\r\n    //             },\r\n    //             body: JSON.stringify(heightBody)\r\n    //         }\r\n    //     )\r\n    //     .then(res => res.json())\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         setHeight(response.bucket[0].dataset[0].point[0].value[0].fpVal);\r\n    //         setLoaded(true);\r\n    //     })\r\n    //     .catch(error => console.log(error));\r\n    // }, [props.user.authenticated])  \r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <img src={props.user.pfPic} alt=\"Profile\" className=\"pfp\"/>\r\n            <span className=\"name\">{props.user.fname} {props.user.lname}</span>\r\n            {loaded \r\n            ?  \r\n                <div class=\"mdc-data-table basic-info\">\r\n                    <div class=\"mdc-data-table__table-container\">\r\n                        <table class=\"mdc-data-table__table\">\r\n                            <thead>\r\n                                <tr class=\"mdc-data-table__header-row\">\r\n                                    <th class=\"mdc-data-table__header-cell\"><span className=\"tableTitle\">Basic Information</span></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody class=\"mdc-data-table__content\">\r\n                                <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Birthday</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{bDate}</td>\r\n                                </tr>\r\n                                <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Gender</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{gender}</td>\r\n                                </tr>\r\n                                {/* <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Weight</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{Math.round(kToLbs(weight))} lbs</td>\r\n                                </tr>\r\n                                <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Height</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{mToFt(height).ft} ft {mToFt(height).inches} in</td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div>\r\n                    <span className=\"loading\">Loading User Info ...</span> \r\n                    <br/>\r\n                    <span className=\"material-icons loading-icon\">cached</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","/* Packages */\r\nimport React, { useState, useEffect } from 'react';\r\n/* Util */\r\nimport {renderPieChart } from '../util/HomeGraphs';\r\nimport { mToMi, getMonth } from '../util/Conversions';\r\n/* Styles */\r\nimport '../styles/Journal.scss'\r\n\r\nexport default function Journal(props) {\r\n    const [ key, setKey ] = useState(0);\r\n\r\n    let d = new Date(), e = new Date(d), navDate = new Date(d);\r\n    const msSinceMidnight = e - d.setHours(0,0,0,0);\r\n    const week = 6.048e+8;\r\n    const day = 86400000;\r\n\r\n    \r\n    const renderDays = (key) => {\r\n        let dates = [];\r\n        for (let i = 14; i > 0; i--) {\r\n            let tempDate = new Date(d.getTime()-2*week+i*day);\r\n            dates.push(tempDate.getDate());\r\n        }\r\n\r\n        return (\r\n            <div className=\"days\">\r\n                {dates.map((x,i) => <div className=\"day\"><button class={i === key ? \"mdc-icon-button dateSelected\" : \"mdc-icon-button\"} onClick={() => setKey(i)}>{x}</button></div>)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"pageTitle\">Your Fitness Journal</div> \r\n            <div className=\"topNav\">\r\n                <div className=\"monthYear\">\r\n                    {getMonth(navDate.getMonth()+1) + \" \" + navDate.getFullYear()}\r\n                </div>\r\n                <div className=\"topDates\">\r\n                    <button class=\"mdc-icon-button material-icons\" >keyboard_arrow_left</button>\r\n                    {renderDays(key)}\r\n                    <button class=\"mdc-icon-button material-icons\" >keyboard_arrow_right</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"bottomSection\">\r\n                <div className=\"log\">\r\n                    <span className=\"currDate\">{getMonth(navDate.getMonth()+1) + \" \" + navDate.getDate() + \",\" + navDate.getFullYear()}</span>\r\n                    <div class=\"mdc-data-table\">\r\n                        <div class=\"mdc-data-table__table-container\">\r\n                            <table class=\"mdc-data-table__table\">\r\n                                <thead>\r\n                                    <tr class=\"mdc-data-table__header-row\">\r\n                                        <th class=\"mdc-data-table__header-cell\"><span className=\"tableTitle\">Log</span></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody class=\"mdc-data-table__content\">\r\n                                    <tr class=\"mdc-data-table__row\">\r\n                                        <th class=\"mdc-data-table__cell\" scope=\"row\">Activity 1</th>\r\n                                        <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">Activity 1 data</td>\r\n                                    </tr>\r\n                                    <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Activity 2</th>\r\n                                        <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">Activity 2 data</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"journalGraphs\">\r\n                    <div className=\"stepsData\">\r\n                        <span class=\"material-icons stepsIcon\">directions_walk</span>\r\n                        <div>\r\n                            7000 Steps\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"heartPointsData\">\r\n                        <span class=\"material-icons heartPointsIcon\">favorite_border</span>\r\n                        <div>\r\n                            20 Heart Points\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"goalData\">\r\n                        <div className=\"logDataGraphTitle\">% Daily Goal</div>\r\n                        <div className=\"goalDataGraphs\">\r\n                            {renderPieChart(7000, 15000, '#4285F4', 'Steps')}\r\n                            {renderPieChart(20, 36, '#06bf9a', 'Heart Points')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <>\r\n            <h2>About</h2>\r\n            <p>Under Construction</p>\r\n        </>\r\n    )\r\n}","export const blankUser = {\n    authenticated: false,\n    name: \"\",\n    fname: \"\",\n    lname: \"\",\n    pfPic: \"\",\n    email: \"\",\n    accessToken: \"\"\n};\n\nexport const createUser = (authenticated, name, fname, lname, pfPic, email, accessToken) => {\n    const popUser = {\n        authenticated: authenticated,\n        name: name,\n        fname: fname,\n        lname: lname,\n        pfPic: pfPic,\n        email: email,\n        accessToken: accessToken\n    }\n    return popUser;\n}","/* Packages */\r\nimport React, { useContext, useState } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n/* Contexts */\r\nimport { userContext } from './App';\r\n/* Utils */\r\nimport keys from '../secrets/oauth2.keys.json';\r\nimport { createUser, blankUser } from '../util/UserProfile';\r\n\r\n// Credit : https://github.com/ZoeLiao/React-Google-SignIn-SignOut-Demo/blob/master/src/GoogleBtn.js\r\n\r\nconst CLIENT_ID = keys.web.client_id;\r\nconst SCOPES = \"https://www.googleapis.com/auth/fitness.activity.read https://www.googleapis.com/auth/fitness.body.read https://www.googleapis.com/auth/fitness.body.write https://www.googleapis.com/auth/user.birthday.read https://www.googleapis.com/auth/user.gender.read https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/fitness.location.read https://www.googleapis.com/auth/fitness.location.write\";\r\n\r\n/** Google Sign In and Sign Out Button */\r\nexport default function SignInOut() {\r\n    // chooses whether to render sign in or sign out button\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    // contexts to propagate to App\r\n    const { setUser } = useContext(userContext);\r\n\r\n    // handle login\r\n    const login = (response) => {\r\n        if (response.accessToken){\r\n            setIsLoggedIn(true);\r\n            setUser(\r\n                createUser(\r\n                    true,\r\n                    response.getBasicProfile().getName(),\r\n                    response.getBasicProfile().getGivenName(),\r\n                    response.getBasicProfile().getFamilyName(),\r\n                    response.getBasicProfile().getImageUrl().slice(0, response.getBasicProfile().getImageUrl().lastIndexOf(\"=\", response.getBasicProfile().getImageUrl().length-1)) + \"=s1000-c\",\r\n                    response.getBasicProfile().getEmail(),\r\n                    response.accessToken\r\n                )\r\n            )\r\n            console.log(response.getGrantedScopes())\r\n        }\r\n    }\r\n\r\n    // handle logout\r\n    const logout = () => {\r\n        setIsLoggedIn(false);\r\n        setUser(blankUser);\r\n    }\r\n\r\n    const handleLoginFailure = () => {\r\n        alert('Failed to login');\r\n    }\r\n\r\n    const handleLogoutFailure = () => {\r\n        alert('Failed to logout');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { isLoggedIn ?\r\n                <GoogleLogout\r\n                    clientId = {CLIENT_ID}\r\n                    buttonText = 'Logout'\r\n                    onLogoutSuccess={logout}\r\n                    onFailure={handleLogoutFailure}\r\n                />\r\n                : \r\n                <GoogleLogin\r\n                    clientId={CLIENT_ID}\r\n                    buttonText='Login'\r\n                    onSuccess={login}\r\n                    onFailure={handleLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    responseType='code,token'\r\n                    scope={SCOPES}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/GoogleFit_Logo_Vertical.0368927f.png\";","/* Packages */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n/* Child Components */\r\nimport SignInOut from './SignInOut';\r\n/* Styles */\r\nimport '../styles/SideNav.scss';\r\n/* Utils */\r\nimport FitLogo from '../imgs/GoogleFit_Logo_Vertical.png'\r\n\r\n/** Sidebar Navigation\r\n *  conatins all of the navigation for the site\r\n * @param props.authenticated chooses what to render based on whether or not the user is authenticated\r\n */\r\nexport default function SideNav(props) {\r\n\r\n    // selected will track the current index of the selected item\r\n    const [ selected, setSelected ] = useState(0);\r\n\r\n    const handleClick = (i) => {\r\n        setSelected(i);\r\n    }\r\n\r\n    return (\r\n        <div className=\"SideNav\">\r\n            <aside className=\"mdc-drawer\">\r\n                <div className=\"mdc-drawer__content\">\r\n                    <nav className=\"mdc-list\">\r\n                        <div className=\"mdc-drawer__header\">\r\n                            <Link to=\"/\" className=\"nav header\" onClick={() => handleClick(0)}>\r\n                                <img src={FitLogo} alt=\"Google Fit Logo\" className=\"logo\"/>\r\n                            </Link>\r\n                        </div>\r\n                        {props.authenticated \r\n                        ? \r\n                            <div>\r\n                                <hr class=\"mdc-list-divider\" />\r\n                                <Link to=\"/\" className={selected === 0 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(0)}> \r\n                                    <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">home</i>\r\n                                    <span className=\"mdc-list-item__text\">Home</span>\r\n                                </Link>\r\n                                <Link to={props.authenticated ? \"/profile\" : \"/\"} className={selected === 1 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(1)}>\r\n                                    <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">account_circle</i>\r\n                                    <span className=\"mdc-list-item__text\">Profile</span>\r\n                                </Link>\r\n                                <Link to={props.authenticated ? \"/journal\" : \"/\"} className={selected === 2 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(2)}>\r\n                                    <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">assignment</i>\r\n                                    <span className=\"mdc-list-item__text\">Journal</span>\r\n                                </Link>\r\n                            </div>\r\n                        :\r\n                            <></>\r\n                        }\r\n                        <hr class=\"mdc-list-divider\" />\r\n                        <Link to=\"/about\" className={selected === 3 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(3)}>\r\n                            <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">info</i>\r\n                            <span className=\"mdc-list-item__text\">About</span>\r\n                        </Link>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"login\">\r\n                    <SignInOut />\r\n                </div>\r\n            </aside>            \r\n        </div>\r\n    )\r\n}","/* Packages */\nimport React, { createContext, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n/* Styles */\nimport '../styles/App.scss';\n/* Child Components */\nimport LandingPage from './LandingPage';\nimport Home from './Home';\nimport Profile from './Profile';\nimport Journal from './Journal';\nimport About from './About';\nimport SideNav from './SideNav';\n/* Util */\nimport { blankUser } from '../util/UserProfile';\n\n// Context to track basic user info\nexport const userContext = createContext({\n  user: blankUser,\n  setUser: (user) => {}\n});\n\n/** App */\nexport default function App() {\n  const [ user, setUser] = useState(blankUser);\n\n  return (\n    <div className=\"App\">\n      <Router basename='/google-fit-web'>\n        <userContext.Provider value={{user, setUser}}>\n          <div className=\"sideNav\">\n            <SideNav authenticated={user.authenticated}/>\n          </div>\n        </userContext.Provider>\n        <Switch>\n          <div className=\"content\">\n            <Route exact path='/'>\n              {user.authenticated ? <Home user={user}/> : <LandingPage />}\n            </Route>\n            <Route exact path='/profile'>\n              {user.authenticated ? <Profile user={user}/> : <LandingPage />}\n            </Route>\n            <Route exact path='/journal'>\n              {user.authenticated ? <Journal /> : <LandingPage />}\n            </Route>\n            <Route exact path='/about'>\n              <About />\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}