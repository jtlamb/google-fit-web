{"version":3,"sources":["components/LandingPage.tsx","components/Home.tsx","components/Profile.tsx","components/Journal.tsx","components/About.tsx","components/SignInOut.tsx","components/SideNav.tsx","components/App.tsx","reportWebVitals.js","index.tsx"],"names":["LandingPage","Home","Profile","Journal","About","CLIENT_ID","web","client_id","SignInOut","useState","isLoggedIn","setIsLoggedIn","setAccessToken","setAuthenticated","useContext","authContext","clientId","buttonText","onLogoutSuccess","onFailure","alert","onSuccess","response","accessToken","cookiePolicy","responseType","SideNav","to","createContext","authenticated","auth","App","className","basename","Provider","value","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q+BAEe,SAASA,IAEpB,OACI,8CCHO,SAASC,IAEpB,OACI,sCCHO,SAASC,IAEpB,OACI,yCCHO,SAASC,IAEpB,OACI,yCCHO,SAASC,IAEpB,OACI,uC,YCGFC,E,MAAiBC,IAAIC,UAKZ,SAASC,IAAa,IAAD,EACMC,oBAAS,GADf,mBACxBC,EADwB,KACZC,EADY,OAEQF,mBAAS,IAFjB,mBAEXG,GAFW,WAIxBC,EAAqBC,qBAAWC,GAAhCF,iBAwBR,OACI,8BACMH,EACE,cAAC,eAAD,CACIM,SAAYX,EACZY,WAAa,SACbC,gBApBD,WACXP,GAAc,GACdC,EAAe,IACfC,GAAiB,IAkBLM,UAXY,WACxBC,MAAM,uBAaE,cAAC,cAAD,CACIJ,SAAUX,EACVY,WAAW,QACXI,UAnCF,SAACC,GACPA,EAASC,cACTZ,GAAc,GACdC,EAAeU,EAASC,aACxBV,GAAiB,KAgCTM,UAtBW,WACvBC,MAAM,oBAsBMI,aAAc,qBACdC,aAAa,iBCpDlB,SAASC,IAEpB,OACI,gCACI,gDACA,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,WAAT,uBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,0BAIZ,cAACnB,EAAD,OCXL,IAAMO,EAAca,wBAAc,CACvCC,eAAe,EACfhB,iBAAkB,SAACiB,OAGN,SAASC,IAAqB,IAAD,EACEtB,oBAAS,GADX,mBAClCoB,EADkC,KACnBhB,EADmB,KAG1C,OACE,qBAAKmB,UAAU,MAAf,SACE,eAAC,IAAD,CAAQC,SAAS,kBAAjB,UACE,cAAClB,EAAYmB,SAAb,CAAsBC,MAAO,CAACN,gBAAehB,oBAA7C,SACE,cAACa,EAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAlB,SACCR,EAAgB,cAAC5B,EAAD,IAAW,cAACD,EAAD,MAE5B,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,WAAlB,SACE,cAACnC,EAAD,MAEF,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,WAAlB,SACE,cAAClC,EAAD,MAEF,cAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,SAAlB,SACE,cAACjC,EAAD,cCxCZ,IAYekC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0fe879ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function LandingPage() : JSX.Element {\r\n\r\n    return (\r\n        <h2>Landing Page</h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Home() : JSX.Element {\r\n\r\n    return (\r\n        <h2>Home</h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Profile() : JSX.Element {\r\n\r\n    return (\r\n        <h2>Profile</h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Journal() : JSX.Element {\r\n\r\n    return (\r\n        <h2>Journal</h2>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function About() : JSX.Element {\r\n\r\n    return (\r\n        <h2>About</h2>\r\n    )\r\n}","import React, { useContext, useState } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport { authContext } from './App';\r\n\r\nimport keys from '../secrets/oauth2.keys.json';\r\n\r\n// Credit : https://github.com/ZoeLiao/React-Google-SignIn-SignOut-Demo/blob/master/src/GoogleBtn.js\r\n\r\nconst CLIENT_ID = keys.web.client_id;\r\n\r\n/**\r\n *  Google Sign In Button\r\n */\r\nexport default function SignInOut() {\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n    const [ accessToken, setAccessToken ] = useState('');\r\n\r\n    const { setAuthenticated } = useContext(authContext);\r\n\r\n    const login = (response : any) => {\r\n        if (response.accessToken){\r\n            setIsLoggedIn(true);\r\n            setAccessToken(response.accessToken);\r\n            setAuthenticated(true);\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        setIsLoggedIn(false);\r\n        setAccessToken('');\r\n        setAuthenticated(false);\r\n    }\r\n\r\n    const handleLoginFailure = () => {\r\n        alert('Failed to login');\r\n    }\r\n\r\n    const handleLogoutFailure = () => {\r\n        alert('Failed to logout');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { isLoggedIn ?\r\n                <GoogleLogout\r\n                    clientId = {CLIENT_ID}\r\n                    buttonText = 'Logout'\r\n                    onLogoutSuccess={logout}\r\n                    onFailure={handleLogoutFailure}\r\n                />\r\n                : \r\n                <GoogleLogin\r\n                    clientId={CLIENT_ID}\r\n                    buttonText='Login'\r\n                    onSuccess={login}\r\n                    onFailure={handleLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    responseType='code,token'\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignInOut from './SignInOut';\r\n\r\n\r\nexport default function SideNav() : JSX.Element {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Google Fit Web</h2>\r\n            <nav>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/profile\">Profile</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/journal\">Journal</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <SignInOut/>\r\n        </div>\r\n    )\r\n}","import React, { createContext, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";import '../styles/App.scss';\nimport LandingPage from './LandingPage';\nimport Home from './Home';\nimport Profile from './Profile';\nimport Journal from './Journal';\nimport About from './About';\nimport SideNav from './SideNav';\n\n// Context to track whether the user is logged in or not\nexport const authContext = createContext({\n  authenticated: false,\n  setAuthenticated: (auth : boolean) => {}\n});\n\nexport default function App() : JSX.Element {\n  const [ authenticated, setAuthenticated ] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <Router basename='/google-fit-web'>\n        <authContext.Provider value={{authenticated, setAuthenticated}}>\n          <SideNav/>\n        </authContext.Provider>\n        <Switch>\n          <Route exact path='/'>\n          {authenticated ? <Home /> : <LandingPage />}\n          </Route>\n          <Route exact path='/profile'>\n            <Profile />\n          </Route>\n          <Route exact path='/journal'>\n            <Journal />\n          </Route>\n          <Route exact path='/about'>\n            <About />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}