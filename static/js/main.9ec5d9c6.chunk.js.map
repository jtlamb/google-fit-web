{"version":3,"sources":["components/LandingPage.jsx","components/Home.jsx","reportWebVitals.js","components/Profile.jsx","components/Journal.jsx","components/About.jsx","util/UserProfile.jsx","components/SignInOut.jsx","imgs/GoogleFit_Logo_Vertical.png","components/SideNav.jsx","components/App.jsx","index.tsx"],"names":["LandingPage","Home","props","useState","selected","setSelected","key","setKey","handleClick","i","requestURL","d","Date","e","msSinceMidnight","setHours","week","day","actual","goal","color","date","heartPoints","setHeartPoints","hpBody","getTime","hpTodayBody","useEffect","fetch","method","headers","user","accessToken","body","JSON","stringify","then","res","json","response","console","log","temp1","parseInt","bucket","startTimeMillis","dataset","point","length","obj","value","fpVal","toDateString","push","temp2","endTimeMillis","concat","catch","error","steps","setSteps","stepsBody","stepsTodayBody","intVal","handlePagination","className","name","class","role","onClick","map","x","renderPieChart","stepsData","dates","tempDate","getMonth","getDate","renderStepsGraph","renderDistanceGraph","renderMoveMinsGraph","renderCaloriesGraph","bottomGraphs","width","height","chartType","loader","data","Math","max","options","pieHole","legend","pieSliceText","slices","renderBarGraph","label","chart","title","subtitle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Profile","loaded","bDate","setBDate","gender","setGender","peopleRequestUrl","URL","protocol","hostname","pathname","searchParams","append","m","birthdays","month","year","genders","formattedValue","src","pfPic","alt","fname","lname","scope","Journal","About","blankUser","authenticated","email","CLIENT_ID","keys","web","client_id","SignInOut","isLoggedIn","setIsLoggedIn","setUser","useContext","userContext","clientId","buttonText","onLogoutSuccess","onFailure","alert","onSuccess","getBasicProfile","getName","getGivenName","getFamilyName","getImageUrl","slice","lastIndexOf","getEmail","getGrantedScopes","cookiePolicy","responseType","SideNav","to","FitLogo","aria-hidden","createContext","App","basename","Provider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ec5d9c6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function LandingPage() {\r\n\r\n    return (\r\n        <>\r\n            <h2>Landing Page</h2>\r\n            <p>Sign in to view your Google Fit data.</p>\r\n        </>\r\n    )\r\n}","/* Packages */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\n/* Styles */\r\nimport '../styles/Home.scss'\r\n\r\nexport default function Home(props) {\r\n    // selected will track the current index of the selected item\r\n    const [ selected, setSelected ] = useState(0);\r\n    const [ key, setKey ] = useState(0);\r\n\r\n    const handleClick = (i) => {\r\n        setSelected(i);\r\n    }\r\n\r\n    const requestURL = `https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate`;\r\n    let d = new Date(), e = new Date(d);\r\n    const msSinceMidnight = e - d.setHours(0,0,0,0);\r\n    const week = 6.048e+8;\r\n    const day = 86400000;\r\n    \r\n\r\n    // ------------HEART POINTS API CALL------------\r\n    const [ heartPoints, setHeartPoints ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const hpBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.heart_minutes\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n    const hpTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.heart_minutes\",\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(hpBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            console.log(response);\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length != 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[i].dataset[0].point[0].value[0].fpVal, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(hpTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length != 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[0].dataset[0].point[0].value[0].fpVal, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 36, \r\n                        color: '#06bf9a', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setHeartPoints(temp1.concat(temp2));\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    // ------------STEPS API CALL------------\r\n    const [ steps, setSteps ] = useState([{actual: 0, goal: 0, color: '', date: ''}]);\r\n\r\n    const stepsBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.step_count.delta\",\r\n            \"dataSourceId\": \"derived:com.google.step_count.delta:com.google.android.gms:estimated_steps\"\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight - week + day,\r\n        \"endTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": day,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const stepsTodayBody = {\r\n        \"aggregateBy\": [{\r\n            \"dataTypeName\": \"com.google.step_count.delta\",\r\n            \"dataSourceId\": \"derived:com.google.step_count.delta:com.google.android.gms:estimated_steps\"\r\n        }],\r\n        \"startTimeMillis\": e.getTime() - msSinceMidnight,\r\n        \"endTimeMillis\": e.getTime(),\r\n        \"bucketByTime\": {\r\n            \"durationMillis\": msSinceMidnight,\r\n            \"period\": {\r\n                \"type\": \"day\",\r\n                \"value\": 1,\r\n                \"timeZoneId\": \"America/New_York\"\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            requestURL,\r\n            {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;encoding=utf-8',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                },\r\n                body: JSON.stringify(stepsBody)\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            console.log(response);\r\n            let temp1 = [];\r\n            for (let i = 0; i < 6; i++) {\r\n                let date = new Date(parseInt(response.bucket[i].startTimeMillis));\r\n                if (response.bucket[i].dataset[0].point.length != 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[i].dataset[0].point[0].value[0].intVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp1.push(obj);\r\n                }\r\n            }\r\n            fetch(\r\n                requestURL,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json;encoding=utf-8',\r\n                        'Authorization': `Bearer ${props.user.accessToken}`,\r\n                    },\r\n                    body: JSON.stringify(stepsTodayBody)\r\n                }\r\n            )\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                console.log(response);\r\n                let temp2 = [];\r\n                let date = new Date(parseInt(response.bucket[0].endTimeMillis));\r\n                if (response.bucket[0].dataset[0].point.length != 0) {\r\n                    let obj = {\r\n                        actual: response.bucket[0].dataset[0].point[0].value[0].intVal, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                } else {\r\n                    let obj = {\r\n                        actual: 0, \r\n                        goal: 15000, \r\n                        color: '#4285F4', \r\n                        date: date.toDateString()\r\n                    }\r\n                    temp2.push(obj);\r\n                }\r\n                setSteps(temp1.concat(temp2));\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    // ------------BOTTOM GRAPHS------------\r\n    const handlePagination = (i) => {\r\n        if (i === 0) {\r\n            // going left\r\n            (key - 1 === -1) ? setKey(3) : setKey(key - 1);\r\n        } else {\r\n            // going right\r\n            (key + 1 === 4) ? setKey(0) : setKey(key + 1);\r\n        }\r\n    }\r\n\r\n    const bottomGraphs = (key) => {\r\n        let stepsData = [];\r\n        steps.map(x => stepsData.push(x.actual));\r\n        let dates = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            let tempDate = new Date(d.getTime()-week+i*day);\r\n            dates.push(tempDate.getMonth()+1 + \"/\" + tempDate.getDate());\r\n        }\r\n        switch (key) {\r\n            case 0:\r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderStepsGraph(dates, stepsData)}</span>\r\n                    <span className='bottomGraph'>{renderDistanceGraph()}</span>\r\n                    </>\r\n                )\r\n            case 1:\r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderDistanceGraph()}</span>\r\n                    <span className='bottomGraph'>{renderMoveMinsGraph()}</span>\r\n                    </>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderMoveMinsGraph()}</span>\r\n                    <span className='bottomGraph'>{renderCaloriesGraph()}</span>\r\n                    </>\r\n                )\r\n            case 3: \r\n                return (\r\n                    <>\r\n                    <span className='bottomGraph'>{renderCaloriesGraph()}</span>\r\n                    <span className='bottomGraph'>{renderStepsGraph()}</span>\r\n                    </>\r\n                )\r\n            default:\r\n            break;\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"name\">\r\n                Welcome {props.user.name}!\r\n            </div>\r\n            <div class=\"middleGraphs\">\r\n            <div class=\"mdc-chip-set mdc-chip-set--choice\" role=\"grid\">\r\n                    <div class={selected === 0 ? \"mdc-chip chip-selected\" : \"mdc-chip\"} role=\"row\" onClick={() => handleClick(0)}>\r\n                        <span role=\"gridcell\">\r\n                            <span role=\"button\" class=\"mdc-chip__primary-action\">\r\n                                <span class=\"mdc-chip__text\">Heart Points</span>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                    <div class={selected === 1 ? \"mdc-chip chip-selected\" : \"mdc-chip\"} role=\"row\" onClick={() => handleClick(1)}>\r\n                        <span role=\"gridcell\">\r\n                            <span role=\"button\" class=\"mdc-chip__primary-action\">\r\n                                <span class=\"mdc-chip__text\">Steps</span>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <span>Your Daily {selected === 0 ? \"Heart Points\" : \"Steps\"} Goals</span>\r\n                <div className=\"weeklyGoalGraphs\">\r\n                    {selected === 0 ? heartPoints.map(x => renderPieChart(x.actual, x.goal, x.color, x.date)) : steps.map(x => renderPieChart(x.actual, x.goal, x.color, x.date))}\r\n                </div>\r\n                \r\n            </div>\r\n            <div className='bottomGraphs'>\r\n                <button class=\"mdc-icon-button material-icons\" onClick={() => handlePagination(0)}>keyboard_arrow_left</button>\r\n                {bottomGraphs(key)}\r\n                <button class=\"mdc-icon-button material-icons\" onClick={() => handlePagination(1)}>keyboard_arrow_right</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst pieWidth = '15em';\r\nconst pieHeight = '15em';\r\n\r\nconst renderPieChart = (actual, goal, color, date) => {\r\n    return (\r\n        <div className=\"pie\">\r\n            <Chart\r\n                width={pieWidth}\r\n                height={pieHeight}\r\n                chartType=\"PieChart\"\r\n                loader={<span className=\"material-icons loading-icon\">loop</span>}\r\n                data={[\r\n                    ['Move Minutes', 'Amount'],\r\n                    ['Actual', actual],\r\n                    ['Away from Goal', Math.max(0, goal - actual)],\r\n                ]}\r\n                options={{\r\n                    pieHole: 0.75,\r\n                    legend: 'none',\r\n                    pieSliceText: 'none',\r\n                    slices: [\r\n                        {\r\n                        color: color\r\n                        },\r\n                        {\r\n                        color: \"#d3d3d3\"\r\n                        }\r\n                    ],\r\n                }}\r\n            />\r\n            {date}   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst graphWidth = '40em';\r\nconst graphHeight = '25em';\r\n\r\nconst renderBarGraph = (props) => {\r\n\r\n    return (\r\n        <Chart\r\n            width={graphWidth}\r\n            height={graphHeight}\r\n            chartType=\"Bar\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={[\r\n                ['Date', props.label],\r\n                [props.date[0], props.data[0]],\r\n                [props.date[1], props.data[1]],\r\n                [props.date[2], props.data[2]],\r\n                [props.date[3], props.data[3]],\r\n                [props.date[4], props.data[4]],\r\n                [props.date[5], props.data[5]],\r\n                [props.date[6], props.data[6]],\r\n            ]}\r\n            options={{\r\n                // Material design options\r\n                chart: {\r\n                title: props.title,\r\n                subtitle: props.subtitle,\r\n                },\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nconst renderStepsGraph = (dates, data) => {\r\n    // get step info from API\r\n    const props = {\r\n        label: 'Steps',\r\n        title: 'Steps',\r\n        subtitle: 'Step data for the past week',\r\n        date: dates,\r\n        data: data\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n\r\nconst renderDistanceGraph = () => {\r\n    // get distance info from API\r\n    const props = {\r\n        label: 'Distance (miles)',\r\n        title: 'Distance',\r\n        subtitle: 'Distance travelled over the past week',\r\n        date: ['2014','2015','2016','2017','2018','2019','2020'],\r\n        data: [1000,1170,660,1030,2000,15000,10000]\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n\r\nconst renderMoveMinsGraph = () => {\r\n    // get move mins info from API\r\n    const props = {\r\n        label: 'Move Mins',\r\n        title: 'Move Minutes',\r\n        subtitle: 'Move Minutes for the past week',\r\n        date: ['2014','2015','2016','2017','2018','2019','2020'],\r\n        data: [1000,1170,660,1030,2000,15000,10000]\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n\r\nconst renderCaloriesGraph = () => {\r\n    // get calories info from API\r\n    const props = {\r\n        label: 'Calories (kCal)',\r\n        title: 'Calories',\r\n        subtitle: 'Calories tracked over the past week',\r\n        date: ['2014','2015','2016','2017','2018','2019','2020'],\r\n        data: [1000,1170,660,1030,2000,15000,10000]\r\n    }\r\n    return renderBarGraph(props);\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* Packages */\r\nimport React, { useEffect, useState } from 'react';\r\n/* Styles */\r\nimport '../styles/Profile.scss'\r\n/* Util */\r\nimport  apikey  from '../secrets/apikey.json'\r\nimport reportWebVitals from '../reportWebVitals';\r\n\r\n\r\nfunction kToLbs(kg) {\r\n    return kg * 2.20462;\r\n}\r\nfunction mToFt(m) {\r\n    let ft = m * 3.28084;\r\n    let inches = (ft % ft.toFixed(0)) * 12;\r\n    ft = ft.toFixed(0);\r\n    inches = Math.round(inches).toFixed(0)\r\n    return {\r\n        ft,\r\n        inches\r\n    }\r\n}\r\nfunction getMonth(m) {\r\n    switch(m) {\r\n        case 1: return \"January\";\r\n        case 2: return \"February\";\r\n        case 3: return \"March\";\r\n        case 4: return \"April\";\r\n        case 5: return \"May\";\r\n        case 6: return \"June\";\r\n        case 7: return \"July\";\r\n        case 8: return \"August\";\r\n        case 9: return \"September\";\r\n        case 10: return \"October\";\r\n        case 11: return \"November\";\r\n        case 12: return \"December\";\r\n        default: return \"Invalid Month\"\r\n    }\r\n}\r\n\r\nexport default function Profile(props) {\r\n\r\n    const [ loaded, setLoaded ] = useState(true);\r\n    const [ bDate, setBDate ] = useState('');\r\n    const [ gender, setGender ] = useState('');\r\n    const [ height, setHeight ] = useState(0);\r\n    const [ weight, setWeight ] = useState(0);\r\n\r\n    /* Name, Birthday, Gender */\r\n    const peopleRequestUrl = new URL('https://people.googleapis.com');\r\n    peopleRequestUrl.protocol = 'https';\r\n    peopleRequestUrl.hostname = 'people.googleapis.com';\r\n    peopleRequestUrl.pathname = '/v1/people/me';\r\n    peopleRequestUrl.searchParams.append('personFields', 'birthdays,genders,names');\r\n    peopleRequestUrl.searchParams.append('sources', 'READ_SOURCE_TYPE_PROFILE');\r\n\r\n    useEffect(() => {\r\n        fetch(\r\n            peopleRequestUrl,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Authorization': `Bearer ${props.user.accessToken}`,\r\n                }\r\n            }\r\n        )\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            setBDate(`${getMonth(response.birthdays[0].date.month)} ${response.birthdays[0].date.day}, ${response.birthdays[0].date.year}`);\r\n            setGender(`${response.genders[0].formattedValue}`);\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, []);\r\n\r\n    /* Height, Weight */\r\n    // const d = new Date();\r\n    // const presentationOfGoogleFit = 86400000 * 16246;\r\n    // const end = d.getTime();\r\n    // console.log(end);\r\n\r\n    // const requestURL = `https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate`;\r\n    // const weightBody = {\r\n    //     \"aggregateBy\": [{\r\n    //         \"dataTypeName\": \"com.google.weight\",\r\n    //         \"dataSourceId\": \"derived:com.google.weight:com.google.android.gms:merge_weight\"\r\n    //     }],\r\n    //     \"startTimeMillis\": end - 86400000,\r\n    //     \"endTimeMillis\": end,\r\n    //     \"bucketByTime\": {\r\n    //         \"durationMillis\": 86400000,\r\n    //         \"period\": {\r\n    //             \"type\": \"day\",\r\n    //             \"value\": 1,\r\n    //             \"timeZoneId\": \"America/New_York\"\r\n    //         }\r\n    //     }\r\n    // };\r\n    // const heightBody = {\r\n    //     \"aggregateBy\": [{\r\n    //         \"dataTypeName\": \"com.google.height\",\r\n    //         \"dataSourceId\": \"derived:com.google.height:com.google.android.gms:merge_height\"\r\n    //     }],\r\n    //     \"startTimeMillis\": end - 86400000,\r\n    //     \"endTimeMillis\": end,\r\n    //     \"bucketByTime\": {\r\n    //         \"durationMillis\": 86400000,\r\n    //         \"period\": {\r\n    //             \"type\": \"day\",\r\n    //             \"value\": 1,\r\n    //             \"timeZoneId\": \"America/New_York\"\r\n    //         }\r\n    //     }\r\n    // };\r\n    // // get weight\r\n    // useEffect(() => {\r\n    //     fetch(\r\n    //         requestURL,\r\n    //         {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json;encoding=utf-8',\r\n    //                 'Authorization': `Bearer ${props.user.accessToken}`,\r\n    //             },\r\n    //             body: JSON.stringify(weightBody)\r\n    //         }\r\n    //     )\r\n    //     .then(res => res.json())\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         setWeight(response.bucket[0].dataset[0].point[0].value[0].fpVal);\r\n    //     })\r\n    //     .catch(error => console.log(error));\r\n    // }, [props.user.authenticated])  \r\n    // // get height\r\n    // useEffect(() => {\r\n    //     fetch(\r\n    //         requestURL,\r\n    //         {\r\n    //             method: 'POST',\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json;encoding=utf-8',\r\n    //                 'Authorization': `Bearer ${props.user.accessToken}`,\r\n    //             },\r\n    //             body: JSON.stringify(heightBody)\r\n    //         }\r\n    //     )\r\n    //     .then(res => res.json())\r\n    //     .then(response => {\r\n    //         console.log(response);\r\n    //         setHeight(response.bucket[0].dataset[0].point[0].value[0].fpVal);\r\n    //         setLoaded(true);\r\n    //     })\r\n    //     .catch(error => console.log(error));\r\n    // }, [props.user.authenticated])  \r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <img src={props.user.pfPic} alt=\"Profile\" className=\"pfp\"/>\r\n            <div className=\"name\">{props.user.fname} {props.user.lname}</div>\r\n            {loaded \r\n            ?  \r\n                <div class=\"mdc-data-table basic-info\">\r\n                    <div class=\"mdc-data-table__table-container\">\r\n                        <table class=\"mdc-data-table__table\">\r\n                            <thead>\r\n                                <tr class=\"mdc-data-table__header-row\">\r\n                                    <th class=\"mdc-data-table__header-cell\"><span className=\"title\">Basic Information</span></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody class=\"mdc-data-table__content\">\r\n                                <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Birthday</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{bDate}</td>\r\n                                </tr>\r\n                                <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Gender</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{gender}</td>\r\n                                </tr>\r\n                                {/* <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Weight</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{Math.round(kToLbs(weight))} lbs</td>\r\n                                </tr>\r\n                                <tr class=\"mdc-data-table__row\">\r\n                                    <th class=\"mdc-data-table__cell\" scope=\"row\">Height</th>\r\n                                    <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric\">{mToFt(height).ft} ft {mToFt(height).inches} in</td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            :\r\n                <div>\r\n                    <span className=\"loading\">Loading User Info ...</span> \r\n                    <br/>\r\n                    <span className=\"material-icons loading-icon\">loop</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Journal() {\r\n\r\n    return (\r\n        <>\r\n            <h2>Journal</h2>\r\n            <p>Under Construction</p>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <>\r\n            <h2>About</h2>\r\n            <p>Under Construction</p>\r\n        </>\r\n    )\r\n}","export const blankUser = {\n    authenticated: false,\n    name: \"\",\n    fname: \"\",\n    lname: \"\",\n    pfPic: \"\",\n    email: \"\",\n    accessToken: \"\"\n};\n\nexport const createUser = (authenticated, name, fname, lname, pfPic, email, accessToken) => {\n    const popUser = {\n        authenticated: authenticated,\n        name: name,\n        fname: fname,\n        lname: lname,\n        pfPic: pfPic,\n        email: email,\n        accessToken: accessToken\n    }\n    return popUser;\n}","/* Packages */\r\nimport React, { useContext, useState } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n/* Contexts */\r\nimport { userContext } from './App';\r\n/* Utils */\r\nimport keys from '../secrets/oauth2.keys.json';\r\nimport { createUser, blankUser } from '../util/UserProfile';\r\n\r\n// Credit : https://github.com/ZoeLiao/React-Google-SignIn-SignOut-Demo/blob/master/src/GoogleBtn.js\r\n\r\nconst CLIENT_ID = keys.web.client_id;\r\nconst SCOPES = \"https://www.googleapis.com/auth/fitness.activity.read https://www.googleapis.com/auth/fitness.body.read https://www.googleapis.com/auth/fitness.body.write https://www.googleapis.com/auth/user.birthday.read https://www.googleapis.com/auth/user.gender.read https://www.googleapis.com/auth/userinfo.profile\";\r\n\r\n/** Google Sign In and Sign Out Button */\r\nexport default function SignInOut() {\r\n    // chooses whether to render sign in or sign out button\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n\r\n    // contexts to propagate to App\r\n    const { setUser } = useContext(userContext);\r\n\r\n    // handle login\r\n    const login = (response) => {\r\n        if (response.accessToken){\r\n            setIsLoggedIn(true);\r\n            setUser(\r\n                createUser(\r\n                    true,\r\n                    response.getBasicProfile().getName(),\r\n                    response.getBasicProfile().getGivenName(),\r\n                    response.getBasicProfile().getFamilyName(),\r\n                    response.getBasicProfile().getImageUrl().slice(0, response.getBasicProfile().getImageUrl().lastIndexOf(\"=\", response.getBasicProfile().getImageUrl().length-1)) + \"=s1000-c\",\r\n                    response.getBasicProfile().getEmail(),\r\n                    response.accessToken\r\n                )\r\n            )\r\n            console.log(response.getGrantedScopes())\r\n        }\r\n    }\r\n\r\n    // handle logout\r\n    const logout = () => {\r\n        setIsLoggedIn(false);\r\n        setUser(blankUser);\r\n    }\r\n\r\n    const handleLoginFailure = () => {\r\n        alert('Failed to login');\r\n    }\r\n\r\n    const handleLogoutFailure = () => {\r\n        alert('Failed to logout');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { isLoggedIn ?\r\n                <GoogleLogout\r\n                    clientId = {CLIENT_ID}\r\n                    buttonText = 'Logout'\r\n                    onLogoutSuccess={logout}\r\n                    onFailure={handleLogoutFailure}\r\n                />\r\n                : \r\n                <GoogleLogin\r\n                    clientId={CLIENT_ID}\r\n                    buttonText='Login'\r\n                    onSuccess={login}\r\n                    onFailure={handleLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    responseType='code,token'\r\n                    scope={SCOPES}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/GoogleFit_Logo_Vertical.0368927f.png\";","/* Packages */\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n/* Child Components */\r\nimport SignInOut from './SignInOut';\r\n/* Styles */\r\nimport '../styles/SideNav.scss';\r\n/* Utils */\r\nimport FitLogo from '../imgs/GoogleFit_Logo_Vertical.png'\r\n\r\n/** Sidebar Navigation\r\n *  conatins all of the navigation for the site\r\n * @param props.authenticated chooses what to render based on whether or not the user is authenticated\r\n */\r\nexport default function SideNav(props) {\r\n\r\n    // selected will track the current index of the selected item\r\n    const [ selected, setSelected ] = useState(0);\r\n\r\n    const handleClick = (i) => {\r\n        setSelected(i);\r\n    }\r\n\r\n    return (\r\n        <div className=\"SideNav\">\r\n            <aside className=\"mdc-drawer\">\r\n                <div className=\"mdc-drawer__content\">\r\n                    <nav className=\"mdc-list\">\r\n                        <div className=\"mdc-drawer__header\">\r\n                            <Link to=\"/\" className=\"nav header\" onClick={() => handleClick(0)}>\r\n                                <img src={FitLogo} alt=\"Google Fit Logo\" className=\"logo\"/>\r\n                            </Link>\r\n                        </div>\r\n                        {props.authenticated \r\n                        ? \r\n                            <div>\r\n                                <hr class=\"mdc-list-divider\" />\r\n                                <Link to=\"/\" className={selected === 0 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(0)}> \r\n                                    <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">home</i>\r\n                                    <span className=\"mdc-list-item__text\">Home</span>\r\n                                </Link>\r\n                                <Link to={props.authenticated ? \"/profile\" : \"/\"} className={selected === 1 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(1)}>\r\n                                    <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">account_circle</i>\r\n                                    <span className=\"mdc-list-item__text\">Profile</span>\r\n                                </Link>\r\n                                <Link to={props.authenticated ? \"/journal\" : \"/\"} className={selected === 2 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(2)}>\r\n                                    <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">assignment</i>\r\n                                    <span className=\"mdc-list-item__text\">Journal</span>\r\n                                </Link>\r\n                            </div>\r\n                        :\r\n                            <></>\r\n                        }\r\n                        <hr class=\"mdc-list-divider\" />\r\n                        <Link to=\"/about\" className={selected === 3 ? \"mdc-list-item nav mdc-list-item--activated\" : \"mdc-list-item nav\"} onClick={() => handleClick(3)}>\r\n                            <i className=\"material-icons mdc-list-item__graphic\" aria-hidden=\"true\">info</i>\r\n                            <span className=\"mdc-list-item__text\">About</span>\r\n                        </Link>\r\n                    </nav>\r\n                </div>\r\n                <div className=\"login\">\r\n                    <SignInOut />\r\n                </div>\r\n            </aside>            \r\n        </div>\r\n    )\r\n}","/* Packages */\nimport React, { createContext, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n/* Styles */\nimport '../styles/App.scss';\n/* Child Components */\nimport LandingPage from './LandingPage';\nimport Home from './Home';\nimport Profile from './Profile';\nimport Journal from './Journal';\nimport About from './About';\nimport SideNav from './SideNav';\n/* Util */\nimport { blankUser } from '../util/UserProfile';\n\n// Context to track basic user info\nexport const userContext = createContext({\n  user: blankUser,\n  setUser: (user) => {}\n});\n\n/** App */\nexport default function App() {\n  const [ user, setUser] = useState(blankUser);\n\n  return (\n    <div className=\"App\">\n      <Router basename='/google-fit-web'>\n        <userContext.Provider value={{user, setUser}}>\n          <div className=\"sideNav\">\n            <SideNav authenticated={user.authenticated}/>\n          </div>\n        </userContext.Provider>\n        <Switch>\n          <div className=\"content\">\n            <Route exact path='/'>\n              {user.authenticated ? <Home user={user}/> : <LandingPage />}\n            </Route>\n            <Route exact path='/profile'>\n              {user.authenticated ? <Profile user={user}/> : <LandingPage />}\n            </Route>\n            <Route exact path='/journal'>\n              {user.authenticated ? <Journal /> : <LandingPage />}\n            </Route>\n            <Route exact path='/about'>\n              <About />\n            </Route>\n          </div>\n        </Switch>\n      </Router>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}